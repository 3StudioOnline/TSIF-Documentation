"use strict";(self.webpackChunktsif_documentation=self.webpackChunktsif_documentation||[]).push([[660],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),d=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=d(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=d(n),f=o,m=c["".concat(s,".").concat(f)]||c[f]||u[f]||i;return n?r.createElement(m,a(a({ref:t},p),{},{components:n})):r.createElement(m,a({ref:t},p))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=c;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var d=2;d<i;d++)a[d]=n[d];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},4887:(e,t,n)=>{n.d(t,{UE:()=>a,h8:()=>o,qh:()=>s,y$:()=>i});n(87462),n(67294);var r=n(3905);const o=e=>{let{children:t,text:n}=e;return(0,r.kt)("span",{style:{backgroundColor:"#822",color:"#faa",border:"1px #faa solid",borderRadius:"5rem",padding:".2rem .4rem",fontSize:".6rem"}},n)},i=e=>{let{children:t}=e;return(0,r.kt)("span",{style:{color:"#faa"}},t)};function a(e){let{children:t,version:n}=e;const o="#ffffff";return(0,r.kt)("span",{style:{backgroundColor:"#414141",color:o,border:"1px #ffffff solid",borderRadius:"5px",padding:".05rem .4rem",fontSize:".75rem"}},n)}function l(e,t,n,o){return(0,r.kt)("div",{style:{backgroundColor:o,color:n,border:"1px "+n+" solid",borderRadius:"5px",padding:".1rem .4rem"}},t)}const s=e=>{let{children:t}=e;return l(0,"Released","#afa","#181")}},16099:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>l,default:()=>c,frontMatter:()=>a,metadata:()=>s,toc:()=>p});var r=n(87462),o=(n(67294),n(3905)),i=n(4887);const a={sidebar_position:5,title:"Download File"},l=void 0,s={unversionedId:"ipns/functions/download-file",id:"version-3.0.1/ipns/functions/download-file",title:"Download File",description:"Download File Function",source:"@site/versioned_docs/version-3.0.1/ipns/functions/download-file.mdx",sourceDirName:"ipns/functions",slug:"/ipns/functions/download-file",permalink:"/TSIF-Documentation/docs/3.0.1/ipns/functions/download-file",draft:!1,editUrl:"https://github.com/3StudioOnline/TSIF-Documentation/edit/master/versioned_docs/version-3.0.1/ipns/functions/download-file.mdx",tags:[],version:"3.0.1",sidebarPosition:5,frontMatter:{sidebar_position:5,title:"Download File"},sidebar:"tutorialSidebar",previous:{title:"Get Data As Image",permalink:"/TSIF-Documentation/docs/3.0.1/ipns/functions/get-data-as-image"},next:{title:"Build Record",permalink:"/TSIF-Documentation/docs/3.0.1/ipns/functions/low-level/record/build-record"}},d={},p=[{value:"Download File Function",id:"download-file-function",level:2}],u={toc:p};function c(e){let{components:t,...a}=e;return(0,o.kt)("wrapper",(0,r.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"download-file-function"},"Download File Function"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"IPFS Download File")," Downloads a file from the ",(0,o.kt)("em",{parentName:"p"},"IPFS")," network for the specified CID/Path. This function requires\ninputs as follows:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"Ipfs Http Gateway")," ",(0,o.kt)(i.h8,{text:"1",mdxType:"Step"})," : Struct, holds the url of the gateway to send the request to."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"Ipns Name")," ",(0,o.kt)(i.h8,{text:"2",mdxType:"Step"})," : UTF-8 String, holds the ",(0,o.kt)("strong",{parentName:"li"},"IPNS name")," used to resolve the requested data."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"Write To File path")," ",(0,o.kt)(i.h8,{text:"3",mdxType:"Step"})," : The filepath where the downloaded data is written to."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"Create Path If Missing")," ",(0,o.kt)(i.h8,{text:"4",mdxType:"Step"})," : Creates the filepath to where the downloaded data should be written to\nif it is missing."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"Overwrite Existing File")," ",(0,o.kt)(i.h8,{text:"5",mdxType:"Step"})," : If set to false and the file exists this function will abort with failure.\nOtherwise, an existing file will be overwritten.")),(0,o.kt)("p",null,"There's also an optional input ",(0,o.kt)("inlineCode",{parentName:"p"},"Request Name")," ",(0,o.kt)(i.h8,{text:"6",mdxType:"Step"}),", a unique identifier for the plugin's HTTP subsystem. It\nallows to fetch the request by name. This is purely optional and only changes how the HTTP request will be managed\ninternally by the plugin."),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"IPNS Download File",src:n(51571).Z,width:"1216",height:"656"})),(0,o.kt)("p",null,"The returned ",(0,o.kt)("em",{parentName:"p"},"Response")," is a struct that holds data such as headers, status code, and body of the response of the HTTP\nrequest."),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"If ",(0,o.kt)("em",{parentName:"p"},"Success")," is ",(0,o.kt)("em",{parentName:"p"},"True")," that means that the response from the ",(0,o.kt)("em",{parentName:"p"},"IPFS")," network was successful and writing file to disk to\nthe specified path was also successful.")))}c.isMDXComponent=!0},51571:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/download_file-bcba60b1cbb9f83a3ba771273b35ea91.png"}}]);