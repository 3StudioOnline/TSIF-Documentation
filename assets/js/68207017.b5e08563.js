"use strict";(self.webpackChunktsif_documentation=self.webpackChunktsif_documentation||[]).push([[4301],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>f});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),c=s(n),f=o,m=c["".concat(l,".").concat(f)]||c[f]||d[f]||a;return n?r.createElement(m,i(i({ref:t},u),{},{components:n})):r.createElement(m,i({ref:t},u))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=c;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p.mdxType="string"==typeof e?e:o,i[1]=p;for(var s=2;s<a;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},4887:(e,t,n)=>{n.d(t,{UE:()=>i,h8:()=>o,qh:()=>l,y$:()=>a});n(7462),n(7294);var r=n(3905);const o=e=>{let{children:t,text:n}=e;return(0,r.kt)("span",{style:{backgroundColor:"#822",color:"#faa",border:"1px #faa solid",borderRadius:"5rem",padding:".2rem .4rem",fontSize:".6rem"}},n)},a=e=>{let{children:t}=e;return(0,r.kt)("span",{style:{color:"#faa"}},t)};function i(e){let{children:t,version:n}=e;const o="#ffffff";return(0,r.kt)("span",{style:{backgroundColor:"#414141",color:o,border:"1px #ffffff solid",borderRadius:"5px",padding:".05rem .4rem",fontSize:".75rem"}},n)}function p(e,t,n,o){return(0,r.kt)("div",{style:{backgroundColor:o,color:n,border:"1px "+n+" solid",borderRadius:"5px",padding:".1rem .4rem"}},t)}const l=e=>{let{children:t}=e;return p(0,"Released","#afa","#181")}},3006:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>p,default:()=>c,frontMatter:()=>i,metadata:()=>l,toc:()=>u});var r=n(7462),o=(n(7294),n(3905)),a=n(4887);const i={sidebar_position:8,title:"Upload (W3UP Bridge)"},p=void 0,l={unversionedId:"ipfs-functions/upload-w3up-bridge",id:"version-3.0.0/ipfs-functions/upload-w3up-bridge",title:"Upload (W3UP Bridge)",description:"Upload (W3UP Bridge) Function",source:"@site/versioned_docs/version-3.0.0/ipfs-functions/upload-w3up-bridge.mdx",sourceDirName:"ipfs-functions",slug:"/ipfs-functions/upload-w3up-bridge",permalink:"/TSIF-Documentation/docs/ipfs-functions/upload-w3up-bridge",draft:!1,editUrl:"https://github.com/3StudioOnline/TSIF-Documentation/edit/master/versioned_docs/version-3.0.0/ipfs-functions/upload-w3up-bridge.mdx",tags:[],version:"3.0.0",sidebarPosition:8,frontMatter:{sidebar_position:8,title:"Upload (W3UP Bridge)"},sidebar:"tutorialSidebar",previous:{title:"IPFS Status",permalink:"/TSIF-Documentation/docs/ipfs-functions/ipfs-status"},next:{title:"Key Generation",permalink:"/TSIF-Documentation/docs/cryptography/key-generation"}},s={},u=[{value:"Upload (W3UP Bridge) Function",id:"upload-w3up-bridge-function",level:2}],d={toc:u};function c(e){let{components:t,...i}=e;return(0,o.kt)("wrapper",(0,r.Z)({},d,i,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"upload-w3up-bridge-function"},"Upload (W3UP Bridge) Function"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"IPFS Upload (W3UP Bridge)")," Uploads a local file or directory to the ",(0,o.kt)("em",{parentName:"p"},"IPFS")," network using the web3.storage W3UP Bridge. This function requires inputs as follows:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Path ",(0,o.kt)(a.h8,{text:"1",mdxType:"Step"})," : Local path to the file or directory to upload."),(0,o.kt)("li",{parentName:"ul"},"DID ",(0,o.kt)(a.h8,{text:"2",mdxType:"Step"})," : The DID used in authorization obtained from Web3.Storage."),(0,o.kt)("li",{parentName:"ul"},"AuthSecret ",(0,o.kt)(a.h8,{text:"3",mdxType:"Step"})," : The authorization secret. Can be generated using w3 cli as 'X-Auth-Secret'."),(0,o.kt)("li",{parentName:"ul"},"AuthToken ",(0,o.kt)(a.h8,{text:"4",mdxType:"Step"})," : The authorization token. Actually a JWT-encoded UCAN. Can be generated using w3 cli as 'Authorization'.")),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},(0,o.kt)("strong",{parentName:"p"},"AuthSecret")," and ",(0,o.kt)("strong",{parentName:"p"},"AuthToken")," are generated using w3-cli.\nThis command generates them as ",(0,o.kt)("strong",{parentName:"p"},"X-Auth-Secret")," and ",(0,o.kt)("strong",{parentName:"p"},"Authorization")," respectively: ",(0,o.kt)("inlineCode",{parentName:"p"},"w3 bridge generate-tokens <DID>"),".\nMore information available in the ",(0,o.kt)("a",{parentName:"p",href:"https://web3.storage/docs/how-to/http-bridge/"},"official documentation"),".")),(0,o.kt)("p",null,"There's also an optional input ",(0,o.kt)("inlineCode",{parentName:"p"},"Request Name")," ",(0,o.kt)(a.h8,{text:"5",mdxType:"Step"}),", a unique identifier for the plugin's HTTP subsystem. It\nallows to fetch the request by name. This is purely optional and only changes how the HTTP request will be managed\ninternally by the plugin."),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"IPFS Upload (W3UP Bridge)",src:n(9145).Z,width:"765",height:"492"})),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"If ",(0,o.kt)("em",{parentName:"p"},"Success")," is ",(0,o.kt)("em",{parentName:"p"},"True")," that only means the upload to the ",(0,o.kt)("em",{parentName:"p"},"IPFS")," network was successful.")),(0,o.kt)("p",null,"If successful returns outputs as follows:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Request ",(0,o.kt)(a.h8,{text:"6",mdxType:"Step"})," : Handle to a HTTP request, allows for cancellation of an ongoing request."),(0,o.kt)("li",{parentName:"ul"},"Bytes Sent ",(0,o.kt)(a.h8,{text:"7",mdxType:"Step"})," : Number of bytes sent while the request is still ongoing."),(0,o.kt)("li",{parentName:"ul"},"Request Size ",(0,o.kt)(a.h8,{text:"8",mdxType:"Step"})," : Total size of the request."),(0,o.kt)("li",{parentName:"ul"},"Response ",(0,o.kt)(a.h8,{text:"9",mdxType:"Step"})," : Struct, holds data such as headers, status code, and body of the response of the HTTP\nrequest."),(0,o.kt)("li",{parentName:"ul"},"IPFS Address ",(0,o.kt)(a.h8,{text:"10",mdxType:"Step"})," : The ",(0,o.kt)("em",{parentName:"li"},"CID")," of the uploaded data and path to the file if applicable.")))}c.isMDXComponent=!0},9145:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/08_ipfs-upload-w3up-bridge-802fc660292513143f61919489eb88a0.png"}}]);