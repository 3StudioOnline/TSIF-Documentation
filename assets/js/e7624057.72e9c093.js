"use strict";(self.webpackChunktsif_documentation=self.webpackChunktsif_documentation||[]).push([[780],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>m});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),p=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=p(e.components);return a.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),d=p(n),m=r,f=d["".concat(c,".").concat(m)]||d[m]||u[m]||o;return n?a.createElement(f,i(i({ref:t},l),{},{components:n})):a.createElement(f,i({ref:t},l))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var p=2;p<o;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},4887:(e,t,n)=>{n.d(t,{h8:()=>r,qh:()=>s,y$:()=>o});n(7462),n(7294);var a=n(3905);const r=e=>{let{children:t,text:n}=e;return(0,a.kt)("span",{style:{backgroundColor:"#822",color:"#faa",border:"1px #faa solid",borderRadius:"5rem",padding:".2rem .4rem",fontSize:".6rem"}},n)},o=e=>{let{children:t}=e;return(0,a.kt)("span",{style:{color:"#faa"}},t)};function i(e,t,n,r){return(0,a.kt)("div",{style:{backgroundColor:r,color:n,border:"1px "+n+" solid",borderRadius:"5px",padding:".1rem .4rem"}},t)}const s=e=>{let{children:t}=e;return i(0,"Released","#afa","#181")}},7782:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>d,frontMatter:()=>i,metadata:()=>c,toc:()=>l});var a=n(7462),r=(n(7294),n(3905)),o=n(4887);const i={sidebar_position:3,title:"Get Data As Image"},s=void 0,c={unversionedId:"ipfs-functions/get-data-as-image",id:"version-1.0.0/ipfs-functions/get-data-as-image",title:"Get Data As Image",description:"Get Data As Image Function",source:"@site/versioned_docs/version-1.0.0/ipfs-functions/get-data-as-image.mdx",sourceDirName:"ipfs-functions",slug:"/ipfs-functions/get-data-as-image",permalink:"/TSIF-Documentation/docs/ipfs-functions/get-data-as-image",draft:!1,editUrl:"https://github.com/3StudioOnline/TSFC-Documentation/edit/master/versioned_docs/version-1.0.0/ipfs-functions/get-data-as-image.mdx",tags:[],version:"1.0.0",sidebarPosition:3,frontMatter:{sidebar_position:3,title:"Get Data As Image"},sidebar:"tutorialSidebar",previous:{title:"Get Data As String",permalink:"/TSIF-Documentation/docs/ipfs-functions/get-data-as-string"},next:{title:"Download File",permalink:"/TSIF-Documentation/docs/ipfs-functions/download-file"}},p={},l=[{value:"Get Data As Image Function",id:"get-data-as-image-function",level:2}],u={toc:l};function d(e){let{components:t,...i}=e;return(0,r.kt)("wrapper",(0,a.Z)({},u,i,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"get-data-as-image-function"},"Get Data As Image Function"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"IPFS Get Data As Image")," Gets data as image from the ",(0,r.kt)("em",{parentName:"p"},"IPFS")," network for the specified CID/Path. This function requires\ninputs as follows:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Ipfs Http Gateway ",(0,r.kt)(o.h8,{text:"1",mdxType:"Step"})," : Struct, holds the url of the gateway to send the request to."),(0,r.kt)("li",{parentName:"ul"},"Ipfs Address ",(0,r.kt)(o.h8,{text:"2",mdxType:"Step"})," : Struct, holds the CID and path of the file on ",(0,r.kt)("em",{parentName:"li"},"IPFS")," network.")),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"IPFS Get Data As Image",src:n(8448).Z,width:"738",height:"402"})),(0,r.kt)("p",null,"The returned ",(0,r.kt)("em",{parentName:"p"},"Response")," is a struct that holds data such as headers, status code, and body of the response of the HTTP\nrequest."),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"If ",(0,r.kt)("em",{parentName:"p"},"Success")," is ",(0,r.kt)("em",{parentName:"p"},"True")," that only means that the response from the ",(0,r.kt)("em",{parentName:"p"},"IPFS")," network was successful only.")),(0,r.kt)("p",null,"If successful, returns the ",(0,r.kt)("em",{parentName:"p"},"Image")," ",(0,r.kt)(o.h8,{text:"3",mdxType:"Step"})," in ",(0,r.kt)("em",{parentName:"p"},"Texture 2D")," object reference."))}d.isMDXComponent=!0},8448:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/03_get-data-as-image-106556aa50064ea402fa890a6473a31b.png"}}]);