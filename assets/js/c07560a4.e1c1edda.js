"use strict";(self.webpackChunktsif_documentation=self.webpackChunktsif_documentation||[]).push([[503],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>f});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),p=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=p(e.components);return r.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),d=p(n),f=a,m=d["".concat(c,".").concat(f)]||d[f]||u[f]||o;return n?r.createElement(m,i(i({ref:t},l),{},{components:n})):r.createElement(m,i({ref:t},l))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var p=2;p<o;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},4887:(e,t,n)=>{n.d(t,{h8:()=>a,qh:()=>s,y$:()=>o});n(7462),n(7294);var r=n(3905);const a=e=>{let{children:t,text:n}=e;return(0,r.kt)("span",{style:{backgroundColor:"#822",color:"#faa",border:"1px #faa solid",borderRadius:"5rem",padding:".2rem .4rem",fontSize:".6rem"}},n)},o=e=>{let{children:t}=e;return(0,r.kt)("span",{style:{color:"#faa"}},t)};function i(e,t,n,a){return(0,r.kt)("div",{style:{backgroundColor:a,color:n,border:"1px "+n+" solid",borderRadius:"5px",padding:".1rem .4rem"}},t)}const s=e=>{let{children:t}=e;return i(0,"Released","#afa","#181")}},3417:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>d,frontMatter:()=>i,metadata:()=>c,toc:()=>l});var r=n(7462),a=(n(7294),n(3905)),o=n(4887);const i={sidebar_position:1,title:"Get Data"},s=void 0,c={unversionedId:"ipfs-functions/get-data",id:"version-1.0.0/ipfs-functions/get-data",title:"Get Data",description:"Get Data",source:"@site/versioned_docs/version-1.0.0/ipfs-functions/get-data.mdx",sourceDirName:"ipfs-functions",slug:"/ipfs-functions/get-data",permalink:"/TSIF-Documentation/docs/ipfs-functions/get-data",draft:!1,editUrl:"https://github.com/3StudioOnline/TSFC-Documentation/edit/master/versioned_docs/version-1.0.0/ipfs-functions/get-data.mdx",tags:[],version:"1.0.0",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Get Data"},sidebar:"tutorialSidebar",previous:{title:"Get Stat Data",permalink:"/TSIF-Documentation/docs/quick-start/stat-data"},next:{title:"Get Data As String",permalink:"/TSIF-Documentation/docs/ipfs-functions/get-data-as-string"}},p={},l=[{value:"Get Data",id:"get-data",level:2}],u={toc:l};function d(e){let{components:t,...i}=e;return(0,a.kt)("wrapper",(0,r.Z)({},u,i,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"get-data"},"Get Data"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"IPFS Get Data")," Gets data from the IPFS network for the specified CID/Path. This function requires inputs as follows:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Ipfs Http Gateway ",(0,a.kt)(o.h8,{text:"1",mdxType:"Step"})," : Struct, holds the url of the gateway to send the request to."),(0,a.kt)("li",{parentName:"ul"},"Ipfs Address ",(0,a.kt)(o.h8,{text:"2",mdxType:"Step"})," : Struct, holds the CID and path of the file on ",(0,a.kt)("em",{parentName:"li"},"IPFS")," network.")),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"IPFS Get Data",src:n(2034).Z,width:"774",height:"420"})),(0,a.kt)("p",null,"The returned ",(0,a.kt)("em",{parentName:"p"},"Response")," is a struct that holds data such as headers, status code, and body of the response of the HTTP\nrequest."),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"If ",(0,a.kt)("em",{parentName:"p"},"Success")," is ",(0,a.kt)("em",{parentName:"p"},"True")," that only means that the response from the ",(0,a.kt)("em",{parentName:"p"},"IPFS")," network was successful only.")),(0,a.kt)("p",null,"If successful, returns the ",(0,a.kt)("em",{parentName:"p"},"Data")," ",(0,a.kt)(o.h8,{text:"3",mdxType:"Step"})," which is an array of bytes."))}d.isMDXComponent=!0},2034:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/01_get-data-5e029ae5a34e7e75e8b2e66d299b7c3f.png"}}]);