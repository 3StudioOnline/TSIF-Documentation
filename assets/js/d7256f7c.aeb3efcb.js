"use strict";(self.webpackChunktsif_documentation=self.webpackChunktsif_documentation||[]).push([[2907],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var r=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),c=p(n),m=i,f=c["".concat(l,".").concat(m)]||c[m]||d[m]||a;return n?r.createElement(f,o(o({ref:t},u),{},{components:n})):r.createElement(f,o({ref:t},u))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=c;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:i,o[1]=s;for(var p=2;p<a;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},4887:(e,t,n)=>{n.d(t,{UE:()=>o,h8:()=>i,qh:()=>l,y$:()=>a});n(87462),n(67294);var r=n(3905);const i=e=>{let{children:t,text:n}=e;return(0,r.kt)("span",{style:{backgroundColor:"#822",color:"#faa",border:"1px #faa solid",borderRadius:"5rem",padding:".2rem .4rem",fontSize:".6rem"}},n)},a=e=>{let{children:t}=e;return(0,r.kt)("span",{style:{color:"#faa"}},t)};function o(e){let{children:t,version:n}=e;const i="#ffffff";return(0,r.kt)("span",{style:{backgroundColor:"#414141",color:i,border:"1px #ffffff solid",borderRadius:"5px",padding:".05rem .4rem",fontSize:".75rem"}},n)}function s(e,t,n,i){return(0,r.kt)("div",{style:{backgroundColor:i,color:n,border:"1px "+n+" solid",borderRadius:"5px",padding:".1rem .4rem"}},t)}const l=e=>{let{children:t}=e;return s(0,"Released","#afa","#181")}},90341:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>c,frontMatter:()=>o,metadata:()=>l,toc:()=>u});var r=n(87462),i=(n(67294),n(3905)),a=n(4887);const o={sidebar_position:1,title:"Publish Name"},s=void 0,l={unversionedId:"ipns/functions/ipns-publish-name",id:"version-2.0.0/ipns/functions/ipns-publish-name",title:"Publish Name",description:"Publish Name",source:"@site/versioned_docs/version-2.0.0/ipns/functions/ipns-publish-name.mdx",sourceDirName:"ipns/functions",slug:"/ipns/functions/ipns-publish-name",permalink:"/TSIF-Documentation/docs/2.0.0/ipns/functions/ipns-publish-name",draft:!1,editUrl:"https://github.com/3StudioOnline/TSIF-Documentation/edit/master/versioned_docs/version-2.0.0/ipns/functions/ipns-publish-name.mdx",tags:[],version:"2.0.0",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Publish Name"},sidebar:"tutorialSidebar",previous:{title:"Record",permalink:"/TSIF-Documentation/docs/2.0.0/ipns/record"},next:{title:"Get Data",permalink:"/TSIF-Documentation/docs/2.0.0/ipns/functions/get-data"}},p={},u=[{value:"Publish Name",id:"publish-name",level:2}],d={toc:u};function c(e){let{components:t,...o}=e;return(0,i.kt)("wrapper",(0,r.Z)({},d,o,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"publish-name"},"Publish Name"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"IPNS Publish Name")," publishes (or republishes) an IPNS name through a pinning service. This function requires inputs as\nfollows:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Ipfs Address")," ",(0,i.kt)(a.h8,{text:"1",mdxType:"Step"})," : Struct, holds the CID and path of the file on ",(0,i.kt)("em",{parentName:"li"},"IPFS")," network."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Private Key PEM")," ",(0,i.kt)(a.h8,{text:"2",mdxType:"Step"})," : Byte array, the private key used to sign the record in ",(0,i.kt)("inlineCode",{parentName:"li"},"PEM")," encoding."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Ipns Service")," ",(0,i.kt)(a.h8,{text:"3",mdxType:"Step"})," : Enum, the pinning service used to publish the record.")),(0,i.kt)("p",null,"There's also additional inputs that can be left empty, but offer additional control over the name:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Password")," ",(0,i.kt)(a.h8,{text:"4",mdxType:"Step"})," : UTF-8 String, pass-phrase used to decrypt the private key\n(should stay empty if the key is not encrypted)."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Lifetime")," ",(0,i.kt)(a.h8,{text:"5",mdxType:"Step"})," : Timespan, the length of time for which the record will be valid without additional\nrepublishing. By default, this value is set to 1 year (365 days)."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Ttl")," ",(0,i.kt)(a.h8,{text:"6",mdxType:"Step"})," : uint64, this is a DNS-related term better explained\n",(0,i.kt)("a",{parentName:"li",href:"https://en.wikipedia.org/wiki/Time_to_live"},"here"),". The default value is 300 (5 minutes)."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Request Name")," ",(0,i.kt)(a.h8,{text:"7",mdxType:"Step"})," : Name, a unique identifier for the plugin's HTTP subsystem. It allows to fetch the\nrequest by name. This is purely optional and only changes how the HTTP request will be managed internally by the plugin.")),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"IPNS Publish Name",src:n(82147).Z,width:"1567",height:"747"})),(0,i.kt)("p",null,"The returned ",(0,i.kt)("em",{parentName:"p"},"Response")," is a struct that holds data such as headers, status code, and body of the response of the HTTP\nrequest."),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"If ",(0,i.kt)("em",{parentName:"p"},"Success")," is ",(0,i.kt)("em",{parentName:"p"},"True")," that only means that the response from the ",(0,i.kt)("em",{parentName:"p"},"IPFS")," network was successful only.")),(0,i.kt)("p",null,"If successful, returns the request structure ",(0,i.kt)(a.h8,{text:"8",mdxType:"Step"})," containing the record field values and the IPNS name."))}c.isMDXComponent=!0},82147:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/ipns_publish_name-62854d60bdaf89c53c93c36fa073a845.png"}}]);