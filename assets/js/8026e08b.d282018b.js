"use strict";(self.webpackChunktsif_documentation=self.webpackChunktsif_documentation||[]).push([[1440],{3905:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>m});var n=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var d=n.createContext({}),c=function(e){var t=n.useContext(d),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},s=function(e){var t=c(e.components);return n.createElement(d.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,o=e.originalType,d=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),p=c(r),m=i,f=p["".concat(d,".").concat(m)]||p[m]||u[m]||o;return r?n.createElement(f,a(a({ref:t},s),{},{components:r})):n.createElement(f,a({ref:t},s))}));function m(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=r.length,a=new Array(o);a[0]=p;var l={};for(var d in t)hasOwnProperty.call(t,d)&&(l[d]=t[d]);l.originalType=e,l.mdxType="string"==typeof e?e:i,a[1]=l;for(var c=2;c<o;c++)a[c]=r[c];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},4887:(e,t,r)=>{r.d(t,{UE:()=>a,h8:()=>i,qh:()=>d,y$:()=>o});r(7462),r(7294);var n=r(3905);const i=e=>{let{children:t,text:r}=e;return(0,n.kt)("span",{style:{backgroundColor:"#822",color:"#faa",border:"1px #faa solid",borderRadius:"5rem",padding:".2rem .4rem",fontSize:".6rem"}},r)},o=e=>{let{children:t}=e;return(0,n.kt)("span",{style:{color:"#faa"}},t)};function a(e){let{children:t,version:r}=e;const i="#ffffff";return(0,n.kt)("span",{style:{backgroundColor:"#414141",color:i,border:"1px #ffffff solid",borderRadius:"5px",padding:".05rem .4rem",fontSize:".75rem"}},r)}function l(e,t,r,i){return(0,n.kt)("div",{style:{backgroundColor:i,color:r,border:"1px "+r+" solid",borderRadius:"5px",padding:".1rem .4rem"}},t)}const d=e=>{let{children:t}=e;return l(0,"Released","#afa","#181")}},1785:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>p,frontMatter:()=>a,metadata:()=>d,toc:()=>s});var n=r(7462),i=(r(7294),r(3905)),o=r(4887);const a={sidebar_position:1,title:"Build Record"},l=void 0,d={unversionedId:"ipns/functions/low-level/record/build-record",id:"version-2.0.0/ipns/functions/low-level/record/build-record",title:"Build Record",description:"Build Record",source:"@site/versioned_docs/version-2.0.0/ipns/functions/low-level/record/build-record.mdx",sourceDirName:"ipns/functions/low-level/record",slug:"/ipns/functions/low-level/record/build-record",permalink:"/TSIF-Documentation/docs/2.0.0/ipns/functions/low-level/record/build-record",draft:!1,editUrl:"https://github.com/3StudioOnline/TSIF-Documentation/edit/master/versioned_docs/version-2.0.0/ipns/functions/low-level/record/build-record.mdx",tags:[],version:"2.0.0",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Build Record"},sidebar:"tutorialSidebar",previous:{title:"Download File",permalink:"/TSIF-Documentation/docs/2.0.0/ipns/functions/download-file"},next:{title:"Sign Record",permalink:"/TSIF-Documentation/docs/2.0.0/ipns/functions/low-level/record/sign-record"}},c={},s=[{value:"Build Record",id:"build-record",level:2}],u={toc:s};function p(e){let{components:t,...a}=e;return(0,i.kt)("wrapper",(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"build-record"},"Build Record"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"IPNS Build Record")," Builds a new record from provided data and signs it. This function requires inputs as follows:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Value")," ",(0,i.kt)(o.h8,{text:"1",mdxType:"Step"})," : UTF-8 String, the actual value pointed to by the name. Usually an IPFS CID or another IPNS name."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Validity")," ",(0,i.kt)(o.h8,{text:"2",mdxType:"Step"})," : UTF-8 String, How long the IPNS name is valid. This can be updated when the record is republished."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Sequence")," ",(0,i.kt)(o.h8,{text:"3",mdxType:"Step"})," : uint64, The iteration this record is on. Starts at 1 with the first publishing and increases by 1 with every republish."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Ttl")," ",(0,i.kt)(o.h8,{text:"4",mdxType:"Step"})," : uint64, this is a DNS-related term better explained\n",(0,i.kt)("a",{parentName:"li",href:"https://en.wikipedia.org/wiki/Time_to_live"},"here"),". The default value is 300 (5 minutes)."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Private Key (PEM)")," ",(0,i.kt)(o.h8,{text:"5",mdxType:"Step"})," : Byte array, they private key used to sign the record in ",(0,i.kt)("inlineCode",{parentName:"li"},"PEM")," encoding."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Additional Metadata")," ",(0,i.kt)(o.h8,{text:"6",mdxType:"Step"})," : String to IPLD Node object map, additional metadata that can be attached to\nthe record. The keys should be prefixed with underscore '_' symbol, but it is not enforced.")),(0,i.kt)("admonition",{type:"warning"},(0,i.kt)("p",{parentName:"admonition"},"Record maximum size is 10KiB. Additional Metadata should not contain large values.")),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"IPNS Build Record",src:r(8837).Z,width:"1330",height:"710"})),(0,i.kt)("p",null,"If successful, returns the ",(0,i.kt)("em",{parentName:"p"},"IPNS Record")," ",(0,i.kt)(o.h8,{text:"7",mdxType:"Step"})," which is the signed data structure, ready for publishing."))}p.isMDXComponent=!0},8837:(e,t,r)=>{r.d(t,{Z:()=>n});const n=r.p+"assets/images/build_record-322c7d44d9ee2d8cf0c9f0ba2f35ff16.png"}}]);